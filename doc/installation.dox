/***************************************************************************
 *            installation.dox
 *
 *  Copyright  2004-2014  Pieter Collins, Luca Geretti
 *
 ****************************************************************************/

/*
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

/*!

\file installation.dox
\brief Installation guide of Doxygen documentation

\page installation_page Installation Guide

This install guide is for Ubuntu 14.04 LTS 64 bit. It can be easily adapted to
most of the current Linux distributions.

\section Requirements Requirements

Some packages are required to download and compile the sources. The syntax to install a package is:

  \code sudo apt-get install <package-name> \endcode

The mandatory packages are the following:

 - \c git : to download the source code and retrieve a given version of the distribution;
 - \c autoconf \c automake \c libtool : to automate the build;
 - \c g++ : to compile the C++ sources;
 - \c libboost-dev \c libboost-serialization-dev \c libboost-thread-dev : internal dependencies.

Summarizing, you can install all the mandatory packages with:

  \code sudo apt-get install git autoconf automake libtool g++ libboost-dev libboost-serialization-dev libboost-thread-dev \endcode

The following packages instead are optional:

 - \c libbdd-dev : enables Binary Decision Diagram support, with improved efficiency (recommended);
 - \c libcairo2-dev : allows to plot analysis results (recommended);
 - \c doxygen : to build the documentation.

\section Download Download

You can check out the latest version on the Git repository by typing:

  \code git clone https://bitbucket.org/ariadne-all/ariadne.git \endcode

Within the cloned repository, the stable 1.0 release branch can be found at the \c 1.0 tag:

  \code git checkout 1.0 \endcode 

\section Configure Configure

To prepare the build automation environment:

  \code ./bootstrap \endcode

After this step, you need to configure the build. We suggest you to create a \c build directory to
hold the output of the compilation: 

  \code mkdir build \endcode
  \code cd build \endcode
  \code ../configure \endcode

This represents the simplest configuration possible, which would install the library in \c /usr/local . 
To install in a different directory, use:

  \code ../configure --prefix=installdir \endcode

To be able to compile with debugging support use:

  \code ../configure --enable-debug \endcode

\section Build Build

In order to build all sources, you can issue

  \code make \endcode

If you need to build the Ariadne library only, it is sufficient to type:

  \code make lib \endcode

To build the code documentation, type:

  \code doxygen \endcode

You do not need to build the sources to build the documentation.

\section Install Install

The actual installation of the library files is done with:

  \code make install \endcode

or

  \code sudo make install \endcode

if you chose an \c installdir that is a system directory.

Now you should have the header files installed in \c /usr/local/include/ariadne
(or \c installdir/include/ariadne), the library in \c /usr/local/lib (or \c installdir/lib)
and, if you have installed doxygen, the documentation in \c /usr/local/share/doc/ariadne
(or \c installdir/share/doc/ariadne).

To test if the installation was successful you can use the HelloWorld example
that you can find in the directory \c helloworld/ of the distribution:

  \code cd helloworld \endcode
  \code make \endcode
  \code ./helloworld \endcode

The execution of the example will output the following (if BDD support is available): 

  \code 
  This is Ariadne!
  You have BDD support
  {1:2} + {3:4} = {4:6} 
  \endcode

*/
