/***************************************************************************
 *            main_page.dox
 *
 *  Copyright  2004-14  Pieter Collins, Luca Geretti
 *
 ****************************************************************************/

/*
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

/*!

\file main_page.dox
\brief Main page of Doxygen documentation


\mainpage

\section mainpage_introduction Introduction

%Ariadne is a C++ package for set-based analysis of dynamical and control systems, including reachability analysis, robust simulation and safety verification. The package can handle systems with reset, flow and guard predicates given by nonlinear functions, making it one of the most general-purpose reachability tools available.

The homepage of %Ariadne is <a href="http://ariadne.parades.rm.cnr.it/">http://ariadne.parades.rm.cnr.it/</a>.

\section mainpage_installation Installation

Full instructions on downloading and installing %Ariadne can be found on the \link installation_page %Installation \endlink page.


\section mainpage_getting_started Getting Started

A step-by-step tutorial on the use of %Ariadne for reachability analysis of a hybrid system is given on the \ref tutorial_page page.

An overview of %Ariadne's capabilities is given on the \ref overview_page documentation page.

\section mainpage_mathematical_foundations Mathematical Foundations

More information on the mathematical foundations of %Ariadne can be found on the following pages:

 - \ref numeric_page
 - \ref linear_algebra_page
 - \ref linear_programming_page
 - \ref function_evaluation_page
 - \ref function_models_page
 - \ref geometry_page
 - \ref evolution_page
 - \ref integration_page
 - \ref hybrid_systems_page
 - \ref hybrid_evolution_page
 - \ref model_checking_page

 - \ref references_page


\section developer_documentation Developer Documentation

\htmlonly A more detailed description of Ariadne's capabilities can be found in the documentation for the individual <a href="modules.html">Modules</a> and <a href="annotated.html">Classes</a>.  \endhtmlonly
\latexonly A more detailed description of Ariadne's capabilities can be found in the documentation for the individual Modules and Classes. \endlatexonly
Coding guideline are given on the \ref coding_guidelines_page documentation page.

\example tutorial/monolithic-forced.h A monolithic system model with forced transitions.
\example tutorial/monolithic.h A monolithic system model with both forced and unforced transitions.
\example tutorial/compositional.h A compositional system model with forced transitions.
\example tutorial/analysis.h Analysis routines for tutorial systems.
\example tutorial/monolithic-forced.cc Executable for the analysis of monolithic system model with forced transitions.
\example tutorial/monolithic.cc Executable for the analysis of monolithic system model with both forced and unforced transitions.
\example tutorial/compositional.cc Executable for the analysis of compositional system model with forced transitions.
*/
